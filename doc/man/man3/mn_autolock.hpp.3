.TH "mn_autolock.hpp" 3 "Tue Sep 15 2020" "Version 1.6x" "Mini Thread" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mn_autolock.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'mn_config\&.hpp'\fP
.br
\fC#include 'mn_mutex\&.hpp'\fP
.br
\fC#include 'mn_semaphore\&.hpp'\fP
.br
\fC#include 'mn_critical\&.hpp'\fP
.br
\fC#include 'mn_recursive_mutex\&.hpp'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBbasic_autolock< LOCK >\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "using \fBautocsemp_t\fP = \fBbasic_autolock\fP< \fBcounting_semaphore_t\fP >"
.br
.ti -1c
.RI "using \fBautobinsemp_t\fP = \fBbasic_autolock\fP< \fBbinary_semaphore_t\fP >"
.br
.ti -1c
.RI "using \fBautomutx_t\fP = \fBbasic_autolock\fP< \fBmutex_t\fP >"
.br
.ti -1c
.RI "using \fBauto_critical_t\fP = \fBbasic_autolock\fP< \fBbasic_critical_lock\fP >"
.br
.ti -1c
.RI "using \fBauto_interrupt_t\fP = \fBbasic_autolock\fP< \fBinterrupts_lock_t\fP >"
.br
.ti -1c
.RI "using \fBauto_schedular_t\fP = \fBbasic_autolock\fP< \fBsheduler_lock_t\fP >"
.br
.ti -1c
.RI "using \fBautoremutx_t\fP = \fBbasic_autolock\fP< \fBremutex_t\fP >"
.br
.ti -1c
.RI "using \fBLockType_t\fP = \fBbinary_semaphore_t\fP"
.br
.ti -1c
.RI "using \fBautolock_t\fP = \fBbasic_autolock\fP< \fBLockType_t\fP >"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "using \fBauto_critical_t\fP =  \fBbasic_autolock\fP<\fBbasic_critical_lock\fP>"
A autolock type for \fBbasic_critical_lock\fP objects
.PP
\fBNote\fP
.RS 4
lock enter in the critial section and with unlock leave the critical section 
.RE
.PP

.SS "using \fBauto_interrupt_t\fP =  \fBbasic_autolock\fP<\fBinterrupts_lock_t\fP>"
A autolock type for interrupts_lock_t objects
.PP
\fBNote\fP
.RS 4
the lock disabled the interrupts and save the state, with unlock the interrupts are enabled and set the olt states 
.br
 
.RE
.PP

.SS "using \fBauto_schedular_t\fP =  \fBbasic_autolock\fP<\fBsheduler_lock_t\fP>"
A autolock type for sheduler_lock_t objects
.PP
\fBNote\fP
.RS 4
lock disable the shedular and unlock enabled it 
.RE
.PP

.SS "using \fBautobinsemp_t\fP =  \fBbasic_autolock\fP<\fBbinary_semaphore_t\fP>"
A autolock type for binary_semaphore_t objects 
.SS "using \fBautocsemp_t\fP =  \fBbasic_autolock\fP<\fBcounting_semaphore_t\fP>"
A autolock type for counting_semaphore_t objects 
.SS "using \fBautolock_t\fP =  \fBbasic_autolock\fP<\fBLockType_t\fP>"

.SS "using \fBautomutx_t\fP =  \fBbasic_autolock\fP<\fBmutex_t\fP>"
A autolock type for mutex_t objects 
.SS "using \fBautoremutx_t\fP =  \fBbasic_autolock\fP<\fBremutex_t\fP>"
A autolock type for remutex_t objects 
.SS "using \fBLockType_t\fP =  \fBbinary_semaphore_t\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Mini Thread from the source code\&.
