.TH "basic_work_queue::work_queue_thread" 3 "Tue Sep 15 2020" "Version 1.6x" "Mini Thread" \" -*- nroff -*-
.ad l
.nh
.SH NAME
basic_work_queue::work_queue_thread
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBbasic_thread\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBwork_queue_thread\fP (char const *strName, unsigned int uiPriority, unsigned short usStackDepth, \fBbasic_work_queue\fP *parent)"
.br
.ti -1c
.RI "virtual \fB~work_queue_thread\fP ()"
.br
.ti -1c
.RI "unsigned int \fBget_num_works\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual void * \fBon_thread\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "const \fBbasic_work_queue\fP * \fBm_parentWorkQueue\fP"
.br
.ti -1c
.RI "unsigned int \fBm_uiNumWorks\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
An internal derived Thread class, in which we do our real work\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "basic_work_queue::work_queue_thread::work_queue_thread (char const * strName, unsigned int uiPriority, unsigned short usStackDepth, \fBbasic_work_queue\fP * parent)"
This file is part of the Mini Thread Library (https://github.com/RoseLeBlood/MiniThread )\&. Copyright (c) 2018 Amber-Sophia Schroeck
.PP
The Mini Thread Library is free software; you can redistribute it and/or modify 
.br
 it under the terms of the GNU Lesser General Public License as published by 
.br
 the Free Software Foundation, version 3, or (at your option) any later version\&.
.PP
The Mini Thread Library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&. See the GNU General Public License for more details\&.
.PP
You should have received a copy of the GNU Lesser General Public License along with the Mini Thread Library; if not, see https://www.gnu.org/licenses/\&. 
.br
 
.SS "basic_work_queue::work_queue_thread::~work_queue_thread ()\fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "unsigned int basic_work_queue::work_queue_thread::get_num_works ()\fC [inline]\fP"
Get number of worked items, after run
.PP
\fBReturns\fP
.RS 4
The number of worked items, after run 
.RE
.PP
\fBNote\fP
.RS 4
When the thread are running then return only 0; 
.RE
.PP

.SS "void * basic_work_queue::work_queue_thread::on_thread ()\fC [protected]\fP, \fC [virtual]\fP"
Implementation of your actual work queue working code ( Omg \&.\&.\&.) 
.PP
\fBReturns\fP
.RS 4
The pointer of m_uiNumWorks - 
.RE
.PP
\fBSee also\fP
.RS 4
\fBget_num_works()\fP 
.RE
.PP

.PP
Implements \fBbasic_thread\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "const \fBbasic_work_queue\fP* basic_work_queue::work_queue_thread::m_parentWorkQueue\fC [private]\fP"

.SS "unsigned int basic_work_queue::work_queue_thread::m_uiNumWorks\fC [private]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Mini Thread from the source code\&.
